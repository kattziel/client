[{"/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/index.js":"1","/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/App.js":"2","/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/pages/Home.js":"3","/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/context/authContext.js":"4","/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/components/Nav.js":"5"},{"size":486,"mtime":1690895573042,"results":"6","hashOfConfig":"7"},{"size":557,"mtime":1690905205777,"results":"8","hashOfConfig":"7"},{"size":1975,"mtime":1690902964505,"results":"9","hashOfConfig":"7"},{"size":770,"mtime":1690902574828,"results":"10","hashOfConfig":"7"},{"size":1657,"mtime":1691148503847,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"150ly3w",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/index.js",[],[],"/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/App.js",[],[],"/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/pages/Home.js",["28"],[],"import React, { useContext } from \"react\";\nimport { ApolloClient } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/authContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst GET_ALL_POSTS = gql`\n  query {\n    allPosts {\n      id\n      title\n      description\n    }\n  }\n`;\n\nconst Home = () => {\n  const { data, loading, error } = useQuery(GET_ALL_POSTS);\n  const [fetchPosts, { data: posts }] = useLazyQuery(GET_ALL_POSTS);\n\n  //access context and getting access to the state and dispatch\n  const { state, dispatch } = useContext(AuthContext);\n\n  //react router; history gives as a history object of a browser\n  let navigate = useNavigate();\n\n  if (loading) return <p className=\"p-5\">Loading...</p>;\n  if (error)\n    return <p className=\"p-5\">An error occurred, please try again later...</p>;\n\n  const updateUserName = () => {\n    dispatch({\n      type: \"LOGGED_IN_USER\",\n      payload: \"Katarzyna\",\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row p-5\">\n        {data.allPosts.map((p) => (\n          <div className=\"col-md-4\" key={p.id}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  <h4>{p.title}</h4>\n                </div>\n                <p className=\"card-text\">{p.description}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n        <button\n          onClick={() => fetchPosts()}\n          className=\"btn-btn-raised btn-primary\"\n        >\n          Fetch POSTS\n        </button>\n      </div>\n      <hr />\n      {JSON.stringify(posts)}\n      <hr />\n      {JSON.stringify(state.user)}\n      <hr />\n      <button className=\"btn btn-primary\" onClick={updateUserName}>\n        Change user name\n      </button>\n      <hr />\n      {JSON.stringify(navigate)};\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/context/authContext.js",[],[],"/Users/macbookpro15/CodersLab/GraphQL/graphQL-playground/client/src/components/Nav.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":22},"no-unused-vars","'ApolloClient' is defined but never used.","Identifier","unusedVar"]